{
  "version": "3.2",
  "log": [
    {
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\math\\SafeMath.sol:16",
        "version": {
          "withMetadata": "3d993bb1bb314a434fcc5b4c69f190a5928102a6089cffde6077653e538c4c6b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Decimal": {
        "src": "contracts\\common\\Decimal.sol:3",
        "version": {
          "withMetadata": "9b41a03176eee2388bc7bcdc3d60b7aaea378e603da276ec5697b70238a35018",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\common\\Initializable.sol:16",
        "version": {
          "withMetadata": "a467b20eab82d425ad56b1b1884a46a2871f121b80e3540bcabe39526ecf3527",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\common\\ReentrancyGuard.sol:16",
        "version": {
          "withMetadata": "08a080a3baae7111cf2de7d05c7dc81001063cd52c0218d1a71c6443ac3ae738",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts\\erc20\\base\\ERC20.sol:31",
        "version": {
          "withMetadata": "26e280606b12eab01545a4e0eca1407237cfe6564de8dc61ca84c28cd89d6106",
          "withoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7",
          "linkedWithoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7"
        },
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Burnable": {
        "src": "contracts\\erc20\\base\\ERC20Burnable.sol:10",
        "version": {
          "withMetadata": "e9757ce37497a905d03d5c9fa53a0b18a603b1b5cf0688880a46b0a200423fa1",
          "withoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1",
          "linkedWithoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Detailed": {
        "src": "contracts\\erc20\\base\\ERC20Detailed.sol:9",
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:10"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:11"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "53",
              "type": "t_uint8",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:56"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mintable": {
        "src": "contracts\\erc20\\base\\ERC20Mintable.sol:11",
        "version": {
          "withMetadata": "90c727f94cddce63809946d188b966fedc7b24cb99a366ee3faa24885b259772",
          "withoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a",
          "linkedWithoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a"
        },
        "inherit": [
          "MinterRole",
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mintingFinished()",
          "mint(address,uint256)",
          "finishMinting()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_mintingFinished",
            "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "104",
              "type": "t_struct(Role)1064_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            },
            {
              "label": "_mintingFinished",
              "offset": 0,
              "slot": "155",
              "type": "t_bool",
              "contract": "ERC20Mintable",
              "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1064_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\erc20\\base\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MinterRole": {
        "src": "contracts\\erc20\\base\\MinterRole.sol:6",
        "version": {
          "withMetadata": "749fe7d790d76d4e4b15f11b097484cf29dbaf3f7cc8b0e3f496afb39549dfdf",
          "withoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c",
          "linkedWithoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c"
        },
        "inherit": [],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "isMinter(address)",
          "renounceMinter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "minters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)1064_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1064_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts\\erc20\\base\\Roles.sol:8",
        "version": {
          "withMetadata": "dbfa538a5e358600041e59d58adf45e2be74f832b4619c7d5d0f9159a9329f92",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\ownership\\Ownable.sol:14",
        "version": {
          "withMetadata": "333f233460930a59d7470a49755e239311647425f2af076e7b3156c20f8e5e63",
          "withoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb",
          "linkedWithoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkInitializer": {
        "src": "contracts\\sfc\\NetworkInitializer.sol:6",
        "version": {
          "withMetadata": "d39197f3fe6208f2f332265a4b8747905c3b17409d5d8711e3d84da70fd29d8b",
          "withoutMetadata": "c3c495aae624c329883140fc3ffcf643534a509ec4b8c2032712260ae449e163",
          "linkedWithoutMetadata": "c3c495aae624c329883140fc3ffcf643534a509ec4b8c2032712260ae449e163"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializeAll(uint256,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts\\sfc\\NetworkInitializer.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EVMWriter": {
        "src": "contracts\\sfc\\NodeDriver.sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NodeDriver": {
        "src": "contracts\\sfc\\NodeDriver.sol:101",
        "version": {
          "withMetadata": "4e3490e928e96a6d01f4e8520ae4f02e17c32a079b0ae0904b7ddd40f65f392a",
          "withoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038",
          "linkedWithoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setBackend(address)",
          "initialize(address,address)",
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)6548",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:102"
            },
            {
              "label": "backend",
              "offset": 0,
              "slot": "52",
              "type": "t_contract(NodeDriver)2116",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:103"
            },
            {
              "label": "evmWriter",
              "offset": 0,
              "slot": "53",
              "type": "t_contract(EVMWriter)2154",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:104"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(EVMWriter)2154": {
              "label": "contract EVMWriter",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriver)2116": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)6548": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NodeDriverAuth": {
        "src": "contracts\\sfc\\NodeDriver.sol:8",
        "version": {
          "withMetadata": "dc1033c1f829c4c49c0d767c2ce428093c96efcc3c72de0ddfcfc0de04fc40d3",
          "withoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4",
          "linkedWithoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "migrateTo(address)",
          "incBalance(address,uint256)",
          "upgradeCode(address,address)",
          "copyCode(address,address)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(SFC)6548",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:11"
            },
            {
              "label": "driver",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriver)2116",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NodeDriver)2116": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)6548": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFC": {
        "src": "contracts\\sfc\\SFC.sol:13",
        "version": {
          "withMetadata": "e808b3e3278d6c7813b21330a139b10810a16f75189d0c253e6f0e16bdc84d43",
          "withoutMetadata": "aebded022b5e04d8387e92c769d9bb9e5dd5253e1e8a3f90040995bf1dcc456f",
          "linkedWithoutMetadata": "aebded022b5e04d8387e92c769d9bb9e5dd5253e1e8a3f90040995bf1dcc456f"
        },
        "inherit": [
          "Version",
          "StakersConstants",
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "currentEpoch()",
          "getEpochValidatorIDs(uint256)",
          "getEpochReceivedStake(uint256,uint256)",
          "getEpochAccumulatedRewardPerToken(uint256,uint256)",
          "getEpochAccumulatedUptime(uint256,uint256)",
          "getEpochAccumulatedOriginatedTxsFee(uint256,uint256)",
          "getEpochOfflineTime(uint256,uint256)",
          "getEpochOfflineBlocks(uint256,uint256)",
          "rewardsStash(address,uint256)",
          "getLockedStake(address,uint256)",
          "minSelfStake()",
          "maxDelegatedRatio()",
          "validatorCommission()",
          "contractCommission()",
          "unlockedRewardRatio()",
          "minLockupDuration()",
          "maxLockupDuration()",
          "withdrawalPeriodEpochs()",
          "withdrawalPeriodTime()",
          "initialize(uint256,uint256,address,address)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "createValidator(bytes)",
          "getSelfStake(uint256)",
          "delegate(uint256)",
          "undelegate(uint256,uint256,uint256)",
          "isSlashed(uint256)",
          "withdraw(uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "pendingRewards(address,uint256)",
          "stashRewards(address,uint256)",
          "claimRewards(uint256)",
          "restakeRewards(uint256)",
          "_syncValidator(uint256,bool)",
          "offlinePenaltyThreshold()",
          "updateBaseRewardPerSecond(uint256)",
          "updateOfflinePenaltyThreshold(uint256,uint256)",
          "updateSlashingRefundRatio(uint256,uint256)",
          "updateStakeTokenizerAddress(address)",
          "updateTotalSupply(int256)",
          "mintFTM(address payable,uint256,string)",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])",
          "sealEpochValidators(uint256[])",
          "isLockedUp(address,uint256)",
          "getUnlockedStake(address,uint256)",
          "lockStake(uint256,uint256,uint256)",
          "relockStake(uint256,uint256,uint256)",
          "unlockStake(uint256,uint256)",
          "setMaxDelegation(uint256)",
          "setMinSelfStake(uint256)",
          "setValidatorCommission(uint256)",
          "setContractCommission(uint256)",
          "setUnlockedRewardRatio(uint256)",
          "setMinLockupDuration(uint256)",
          "setMaxLockupDuration(uint256)",
          "setWithdrawalPeriodEpoch(uint256)",
          "setWithdrawalPeriodTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "maxDelegation",
            "src": "contracts\\sfc\\SFC.sol:101"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(NodeDriverAuth)1721",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:29"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:31"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_struct(Validator)2188_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:36"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:47"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:49"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:58"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:68"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:70"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:73"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:93"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "119",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:97"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:100"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:110"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "132",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)1721": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)2219_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)2188_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)2315_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)2255_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)2219_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)2188_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)2238_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Spacer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:8",
        "version": {
          "withMetadata": "e67ab033400ad1e477b0362fc9465cdca900a9d9aee41929e1d3cf85b9fb8cd7",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakeTokenizer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:12",
        "version": {
          "withMetadata": "5e1e2da7e005fa56fd74c7c94339b58cfbfb5f727ac382940f6c396988d8f88b",
          "withoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a",
          "linkedWithoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a"
        },
        "inherit": [
          "Initializable",
          "Spacer"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "mintSFTM(uint256)",
          "redeemSFTM(uint256,uint256)",
          "allowedToWithdrawStake(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)6548",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:13"
            },
            {
              "label": "outstandingSFTM",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:15"
            },
            {
              "label": "sFTMTokenAddress",
              "offset": 0,
              "slot": "53",
              "type": "t_address",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SFC)6548": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakersConstants": {
        "src": "contracts\\sfc\\StakerConstants.sol:6",
        "version": {
          "withMetadata": "0cd2c2b8898101404317ae01c3fa1eb101880f3954afcd5e11019c35004e321e",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StubEvmWriter": {
        "src": "contracts\\test\\StubEvmWriter.sol:5",
        "version": {
          "withMetadata": "a06a935b6f3e899b4130ff29d94836f8b9661ec092307b89f65d814a0dad36ce",
          "withoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c",
          "linkedWithoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c"
        },
        "inherit": [
          "EVMWriter"
        ],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnitTestSFC": {
        "src": "contracts\\test\\UnitTestSFC.sol:5",
        "version": {
          "withMetadata": "29b25502da18f22ebdb1bdca9c8611d6ecaf873c9a44c177f8a641268d48cca8",
          "withoutMetadata": "d8fc6219bc8e7bfc44381ae4ce3b0a5103a1019646381c59b419767dfcd2f10f",
          "linkedWithoutMetadata": "d8fc6219bc8e7bfc44381ae4ce3b0a5103a1019646381c59b419767dfcd2f10f"
        },
        "inherit": [
          "SFC",
          "Version",
          "StakersConstants",
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "minSelfStake()",
          "rebaseTime()",
          "advanceTime(uint256)",
          "getTime()",
          "getBlockTime()",
          "highestLockupEpoch(address,uint256)",
          "enableNonNodeCalls()",
          "disableNonNodeCalls()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(NodeDriverAuth)1721",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:29"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:31"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_struct(Validator)2188_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:36"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:47"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:49"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:58"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:68"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:70"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:73"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:93"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "119",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:97"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:100"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:110"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "132",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:112"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "133",
              "type": "t_uint256",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:11"
            },
            {
              "label": "allowedNonNodeCalls",
              "offset": 0,
              "slot": "134",
              "type": "t_bool",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)1721": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)2219_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)2188_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)2315_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)2255_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)2219_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)2188_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)2238_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Version": {
        "src": "contracts\\version\\Version.sol:6",
        "version": {
          "withMetadata": "4e0b51a99864890ef538ad430b2362061069c830fd9dc37c2b15c2d8d3aaaee8",
          "withoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a",
          "linkedWithoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\math\\SafeMath.sol:16",
        "version": {
          "withMetadata": "3d993bb1bb314a434fcc5b4c69f190a5928102a6089cffde6077653e538c4c6b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Decimal": {
        "src": "contracts\\common\\Decimal.sol:3",
        "version": {
          "withMetadata": "9b41a03176eee2388bc7bcdc3d60b7aaea378e603da276ec5697b70238a35018",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\common\\Initializable.sol:16",
        "version": {
          "withMetadata": "a467b20eab82d425ad56b1b1884a46a2871f121b80e3540bcabe39526ecf3527",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\common\\ReentrancyGuard.sol:16",
        "version": {
          "withMetadata": "08a080a3baae7111cf2de7d05c7dc81001063cd52c0218d1a71c6443ac3ae738",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts\\erc20\\base\\ERC20.sol:31",
        "version": {
          "withMetadata": "26e280606b12eab01545a4e0eca1407237cfe6564de8dc61ca84c28cd89d6106",
          "withoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7",
          "linkedWithoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7"
        },
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Burnable": {
        "src": "contracts\\erc20\\base\\ERC20Burnable.sol:10",
        "version": {
          "withMetadata": "e9757ce37497a905d03d5c9fa53a0b18a603b1b5cf0688880a46b0a200423fa1",
          "withoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1",
          "linkedWithoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Detailed": {
        "src": "contracts\\erc20\\base\\ERC20Detailed.sol:9",
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:10"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:11"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "53",
              "type": "t_uint8",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:56"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mintable": {
        "src": "contracts\\erc20\\base\\ERC20Mintable.sol:11",
        "version": {
          "withMetadata": "90c727f94cddce63809946d188b966fedc7b24cb99a366ee3faa24885b259772",
          "withoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a",
          "linkedWithoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a"
        },
        "inherit": [
          "MinterRole",
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mintingFinished()",
          "mint(address,uint256)",
          "finishMinting()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_mintingFinished",
            "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "104",
              "type": "t_struct(Role)1064_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            },
            {
              "label": "_mintingFinished",
              "offset": 0,
              "slot": "155",
              "type": "t_bool",
              "contract": "ERC20Mintable",
              "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1064_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\erc20\\base\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MinterRole": {
        "src": "contracts\\erc20\\base\\MinterRole.sol:6",
        "version": {
          "withMetadata": "749fe7d790d76d4e4b15f11b097484cf29dbaf3f7cc8b0e3f496afb39549dfdf",
          "withoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c",
          "linkedWithoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c"
        },
        "inherit": [],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "isMinter(address)",
          "renounceMinter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "minters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)1064_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1064_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts\\erc20\\base\\Roles.sol:8",
        "version": {
          "withMetadata": "dbfa538a5e358600041e59d58adf45e2be74f832b4619c7d5d0f9159a9329f92",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\ownership\\Ownable.sol:14",
        "version": {
          "withMetadata": "333f233460930a59d7470a49755e239311647425f2af076e7b3156c20f8e5e63",
          "withoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb",
          "linkedWithoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkInitializer": {
        "src": "contracts\\sfc\\NetworkInitializer.sol:6",
        "version": {
          "withMetadata": "a006a20b80dcbd1d16f50364c2ee0ebfcbd6a8abe2b30cd77de098dd450fcea8",
          "withoutMetadata": "c3c495aae624c329883140fc3ffcf643534a509ec4b8c2032712260ae449e163",
          "linkedWithoutMetadata": "c3c495aae624c329883140fc3ffcf643534a509ec4b8c2032712260ae449e163"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializeAll(uint256,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts\\sfc\\NetworkInitializer.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EVMWriter": {
        "src": "contracts\\sfc\\NodeDriver.sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NodeDriver": {
        "src": "contracts\\sfc\\NodeDriver.sol:101",
        "version": {
          "withMetadata": "e39d9e7137f0d81d623eada5a2e8d6be60f7cb409bad6a1124ccb932da8ae18f",
          "withoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038",
          "linkedWithoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setBackend(address)",
          "initialize(address,address)",
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)6546",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:102"
            },
            {
              "label": "backend",
              "offset": 0,
              "slot": "52",
              "type": "t_contract(NodeDriver)2116",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:103"
            },
            {
              "label": "evmWriter",
              "offset": 0,
              "slot": "53",
              "type": "t_contract(EVMWriter)2154",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:104"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(EVMWriter)2154": {
              "label": "contract EVMWriter",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriver)2116": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)6546": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NodeDriverAuth": {
        "src": "contracts\\sfc\\NodeDriver.sol:8",
        "version": {
          "withMetadata": "96ba33a90897542e33ece58663d188baa0e03ab1eafc567c8b496ac0712a780d",
          "withoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4",
          "linkedWithoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "migrateTo(address)",
          "incBalance(address,uint256)",
          "upgradeCode(address,address)",
          "copyCode(address,address)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(SFC)6546",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:11"
            },
            {
              "label": "driver",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriver)2116",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NodeDriver)2116": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)6546": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFC": {
        "src": "contracts\\sfc\\SFC.sol:13",
        "version": {
          "withMetadata": "7136fb90a6878ba7d09a146df1c92356d166a93806fbef44274cfc4dd9b8e300",
          "withoutMetadata": "6a177a340117f2d23896666735ac3af229cd435d87f9dee30b01e1679fb341ac",
          "linkedWithoutMetadata": "6a177a340117f2d23896666735ac3af229cd435d87f9dee30b01e1679fb341ac"
        },
        "inherit": [
          "Version",
          "StakersConstants",
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "currentEpoch()",
          "getEpochValidatorIDs(uint256)",
          "getEpochReceivedStake(uint256,uint256)",
          "getEpochAccumulatedRewardPerToken(uint256,uint256)",
          "getEpochAccumulatedUptime(uint256,uint256)",
          "getEpochAccumulatedOriginatedTxsFee(uint256,uint256)",
          "getEpochOfflineTime(uint256,uint256)",
          "getEpochOfflineBlocks(uint256,uint256)",
          "rewardsStash(address,uint256)",
          "getLockedStake(address,uint256)",
          "minSelfStake()",
          "maxDelegatedRatio()",
          "validatorCommission()",
          "contractCommission()",
          "unlockedRewardRatio()",
          "minLockupDuration()",
          "maxLockupDuration()",
          "withdrawalPeriodEpochs()",
          "withdrawalPeriodTime()",
          "initialize(uint256,uint256,address,address)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "createValidator(bytes)",
          "getSelfStake(uint256)",
          "delegate(uint256)",
          "undelegate(uint256,uint256,uint256)",
          "isSlashed(uint256)",
          "withdraw(uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "pendingRewards(address,uint256)",
          "stashRewards(address,uint256)",
          "claimRewards(uint256)",
          "restakeRewards(uint256)",
          "_syncValidator(uint256,bool)",
          "offlinePenaltyThreshold()",
          "updateBaseRewardPerSecond(uint256)",
          "updateOfflinePenaltyThreshold(uint256,uint256)",
          "updateSlashingRefundRatio(uint256,uint256)",
          "updateStakeTokenizerAddress(address)",
          "updateTotalSupply(int256)",
          "mintFTM(address payable,uint256,string)",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])",
          "sealEpochValidators(uint256[])",
          "isLockedUp(address,uint256)",
          "getUnlockedStake(address,uint256)",
          "lockStake(uint256,uint256,uint256)",
          "relockStake(uint256,uint256,uint256)",
          "unlockStake(uint256,uint256)",
          "setMaxDelegation(uint256)",
          "setMinSelfStake(uint256)",
          "setValidatorCommission(uint256)",
          "setContractCommission(uint256)",
          "setUnlockedRewardRatio(uint256)",
          "setMinLockupDuration(uint256)",
          "setMaxLockupDuration(uint256)",
          "setWithdrawalPeriodEpoch(uint256)",
          "setWithdrawalPeriodTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(NodeDriverAuth)1721",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:31"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_struct(Validator)2188_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:36"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:41"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:49"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:51"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:60"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:73"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "119",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "132",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)1721": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)2219_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)2188_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)2315_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)2255_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)2219_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)2188_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)2238_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Spacer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:8",
        "version": {
          "withMetadata": "407084265df3f61ffbf210c88bdd56a36064a55a9581d1deea0cd69a0cebe97c",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakeTokenizer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:12",
        "version": {
          "withMetadata": "3fae35ff66ef1956b5ac2c844e51c0d7f4f7ba65ab4d9fb90980092715007267",
          "withoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a",
          "linkedWithoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a"
        },
        "inherit": [
          "Initializable",
          "Spacer"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "mintSFTM(uint256)",
          "redeemSFTM(uint256,uint256)",
          "allowedToWithdrawStake(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)6546",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:13"
            },
            {
              "label": "outstandingSFTM",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:15"
            },
            {
              "label": "sFTMTokenAddress",
              "offset": 0,
              "slot": "53",
              "type": "t_address",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SFC)6546": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakersConstants": {
        "src": "contracts\\sfc\\StakerConstants.sol:6",
        "version": {
          "withMetadata": "0cd2c2b8898101404317ae01c3fa1eb101880f3954afcd5e11019c35004e321e",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StubEvmWriter": {
        "src": "contracts\\test\\StubEvmWriter.sol:5",
        "version": {
          "withMetadata": "2ba6b3bc973388f6113c7c66310a74f8dc7b29dee49d535eb9b049861b0e4a75",
          "withoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c",
          "linkedWithoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c"
        },
        "inherit": [
          "EVMWriter"
        ],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnitTestSFC": {
        "src": "contracts\\test\\UnitTestSFC.sol:5",
        "version": {
          "withMetadata": "c994cbabf257cf631432a0f1a455e90039d0f0b6ea038e292b4309a3e0e17761",
          "withoutMetadata": "0b87fc93a00e026ee0b5669b43e2ed19c2467cdbde38984355633f7fe4af99b1",
          "linkedWithoutMetadata": "0b87fc93a00e026ee0b5669b43e2ed19c2467cdbde38984355633f7fe4af99b1"
        },
        "inherit": [
          "SFC",
          "Version",
          "StakersConstants",
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "minSelfStake()",
          "rebaseTime()",
          "advanceTime(uint256)",
          "getTime()",
          "getBlockTime()",
          "highestLockupEpoch(address,uint256)",
          "enableNonNodeCalls()",
          "disableNonNodeCalls()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(NodeDriverAuth)1721",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:31"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_struct(Validator)2188_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:36"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:41"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:49"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:51"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:60"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:73"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "119",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "132",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "133",
              "type": "t_uint256",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:11"
            },
            {
              "label": "allowedNonNodeCalls",
              "offset": 0,
              "slot": "134",
              "type": "t_bool",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)1721": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)2219_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)2315_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)2255_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)2219_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)2188_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)2238_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)2315_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)2255_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)2219_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)2188_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)2238_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Version": {
        "src": "contracts\\version\\Version.sol:6",
        "version": {
          "withMetadata": "4e0b51a99864890ef538ad430b2362061069c830fd9dc37c2b15c2d8d3aaaee8",
          "withoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a",
          "linkedWithoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Migrations": {
        "src": "contracts\\sfc\\Migrations.sol:3",
        "version": {
          "withMetadata": "21e86140e1e5977440ad66e58efcf1ef3600316511f0da4b0587d75607abefcf",
          "withoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6",
          "linkedWithoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)",
          "upgrade(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts\\sfc\\Migrations.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\sfc\\Migrations.sol:4"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\sfc\\Migrations.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}